//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GreatOutdoors.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TeamAEntities : DbContext
    {
        public TeamAEntities()
            : base("name=TeamAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Retailer> Retailers { get; set; }
        public virtual DbSet<Return> Returns { get; set; }
        public virtual DbSet<ReturnDetail> ReturnDetails { get; set; }
        public virtual DbSet<SalesPerson> SalesPersons { get; set; }
    
        public virtual int AddAddress(string addressID, string retailerID, string line1, string line2, string city, string pincode, string state, string mobileNo, Nullable<System.DateTime> creationDateTime, Nullable<System.DateTime> lastModifiedDateTime)
        {
            var addressIDParameter = addressID != null ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(string));
    
            var retailerIDParameter = retailerID != null ?
                new ObjectParameter("RetailerID", retailerID) :
                new ObjectParameter("RetailerID", typeof(string));
    
            var line1Parameter = line1 != null ?
                new ObjectParameter("Line1", line1) :
                new ObjectParameter("Line1", typeof(string));
    
            var line2Parameter = line2 != null ?
                new ObjectParameter("Line2", line2) :
                new ObjectParameter("Line2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var creationDateTimeParameter = creationDateTime.HasValue ?
                new ObjectParameter("CreationDateTime", creationDateTime) :
                new ObjectParameter("CreationDateTime", typeof(System.DateTime));
    
            var lastModifiedDateTimeParameter = lastModifiedDateTime.HasValue ?
                new ObjectParameter("LastModifiedDateTime", lastModifiedDateTime) :
                new ObjectParameter("LastModifiedDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddAddress", addressIDParameter, retailerIDParameter, line1Parameter, line2Parameter, cityParameter, pincodeParameter, stateParameter, mobileNoParameter, creationDateTimeParameter, lastModifiedDateTimeParameter);
        }
    
        public virtual int AddOrder(Nullable<System.Guid> orderID, Nullable<System.Guid> retailerID, Nullable<System.Guid> salespersonID, Nullable<int> totalQuantity, Nullable<decimal> totalAmount, string channelOfSale)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(System.Guid));
    
            var retailerIDParameter = retailerID.HasValue ?
                new ObjectParameter("retailerID", retailerID) :
                new ObjectParameter("retailerID", typeof(System.Guid));
    
            var salespersonIDParameter = salespersonID.HasValue ?
                new ObjectParameter("salespersonID", salespersonID) :
                new ObjectParameter("salespersonID", typeof(System.Guid));
    
            var totalQuantityParameter = totalQuantity.HasValue ?
                new ObjectParameter("totalQuantity", totalQuantity) :
                new ObjectParameter("totalQuantity", typeof(int));
    
            var totalAmountParameter = totalAmount.HasValue ?
                new ObjectParameter("totalAmount", totalAmount) :
                new ObjectParameter("totalAmount", typeof(decimal));
    
            var channelOfSaleParameter = channelOfSale != null ?
                new ObjectParameter("channelOfSale", channelOfSale) :
                new ObjectParameter("channelOfSale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOrder", orderIDParameter, retailerIDParameter, salespersonIDParameter, totalQuantityParameter, totalAmountParameter, channelOfSaleParameter);
        }
    
        public virtual int AddOrderDetails(Nullable<System.Guid> orderDetailID, Nullable<System.Guid> orderID, Nullable<System.Guid> productID, Nullable<int> quantity, Nullable<int> discountedUnitPrice, Nullable<int> totalPrice, Nullable<bool> giftPacking, Nullable<System.Guid> addressID)
        {
            var orderDetailIDParameter = orderDetailID.HasValue ?
                new ObjectParameter("orderDetailID", orderDetailID) :
                new ObjectParameter("orderDetailID", typeof(System.Guid));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(System.Guid));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var discountedUnitPriceParameter = discountedUnitPrice.HasValue ?
                new ObjectParameter("discountedUnitPrice", discountedUnitPrice) :
                new ObjectParameter("discountedUnitPrice", typeof(int));
    
            var totalPriceParameter = totalPrice.HasValue ?
                new ObjectParameter("totalPrice", totalPrice) :
                new ObjectParameter("totalPrice", typeof(int));
    
            var giftPackingParameter = giftPacking.HasValue ?
                new ObjectParameter("giftPacking", giftPacking) :
                new ObjectParameter("giftPacking", typeof(bool));
    
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("addressID", addressID) :
                new ObjectParameter("addressID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddOrderDetails", orderDetailIDParameter, orderIDParameter, productIDParameter, quantityParameter, discountedUnitPriceParameter, totalPriceParameter, giftPackingParameter, addressIDParameter);
        }
    
        public virtual int AddProduct(Nullable<System.Guid> prodid, string prodname, string category, Nullable<int> stock, string size, string colour, string techspecs, Nullable<decimal> cprice, Nullable<decimal> sprice, Nullable<decimal> discountpercentage, byte[] img)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(System.Guid));
    
            var prodnameParameter = prodname != null ?
                new ObjectParameter("prodname", prodname) :
                new ObjectParameter("prodname", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            var sizeParameter = size != null ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(string));
    
            var colourParameter = colour != null ?
                new ObjectParameter("colour", colour) :
                new ObjectParameter("colour", typeof(string));
    
            var techspecsParameter = techspecs != null ?
                new ObjectParameter("techspecs", techspecs) :
                new ObjectParameter("techspecs", typeof(string));
    
            var cpriceParameter = cprice.HasValue ?
                new ObjectParameter("cprice", cprice) :
                new ObjectParameter("cprice", typeof(decimal));
    
            var spriceParameter = sprice.HasValue ?
                new ObjectParameter("sprice", sprice) :
                new ObjectParameter("sprice", typeof(decimal));
    
            var discountpercentageParameter = discountpercentage.HasValue ?
                new ObjectParameter("discountpercentage", discountpercentage) :
                new ObjectParameter("discountpercentage", typeof(decimal));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProduct", prodidParameter, prodnameParameter, categoryParameter, stockParameter, sizeParameter, colourParameter, techspecsParameter, cpriceParameter, spriceParameter, discountpercentageParameter, imgParameter);
        }
    
        public virtual int AddRetailer(Nullable<System.Guid> retailerID, string retailerName, string retailerMobile, string email, string retailerPassword, Nullable<System.DateTime> creationDateTime, Nullable<System.DateTime> modifiedDateTime)
        {
            var retailerIDParameter = retailerID.HasValue ?
                new ObjectParameter("retailerID", retailerID) :
                new ObjectParameter("retailerID", typeof(System.Guid));
    
            var retailerNameParameter = retailerName != null ?
                new ObjectParameter("retailerName", retailerName) :
                new ObjectParameter("retailerName", typeof(string));
    
            var retailerMobileParameter = retailerMobile != null ?
                new ObjectParameter("retailerMobile", retailerMobile) :
                new ObjectParameter("retailerMobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var retailerPasswordParameter = retailerPassword != null ?
                new ObjectParameter("retailerPassword", retailerPassword) :
                new ObjectParameter("retailerPassword", typeof(string));
    
            var creationDateTimeParameter = creationDateTime.HasValue ?
                new ObjectParameter("creationDateTime", creationDateTime) :
                new ObjectParameter("creationDateTime", typeof(System.DateTime));
    
            var modifiedDateTimeParameter = modifiedDateTime.HasValue ?
                new ObjectParameter("modifiedDateTime", modifiedDateTime) :
                new ObjectParameter("modifiedDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddRetailer", retailerIDParameter, retailerNameParameter, retailerMobileParameter, emailParameter, retailerPasswordParameter, creationDateTimeParameter, modifiedDateTimeParameter);
        }
    
        public virtual int AddReturn(Nullable<System.Guid> returnID, Nullable<System.Guid> orderID, string channelOfReturn, Nullable<decimal> returnAmount, Nullable<System.DateTime> returnDateTime, Nullable<System.DateTime> lastModifiedDateTime)
        {
            var returnIDParameter = returnID.HasValue ?
                new ObjectParameter("returnID", returnID) :
                new ObjectParameter("returnID", typeof(System.Guid));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(System.Guid));
    
            var channelOfReturnParameter = channelOfReturn != null ?
                new ObjectParameter("channelOfReturn", channelOfReturn) :
                new ObjectParameter("channelOfReturn", typeof(string));
    
            var returnAmountParameter = returnAmount.HasValue ?
                new ObjectParameter("returnAmount", returnAmount) :
                new ObjectParameter("returnAmount", typeof(decimal));
    
            var returnDateTimeParameter = returnDateTime.HasValue ?
                new ObjectParameter("returnDateTime", returnDateTime) :
                new ObjectParameter("returnDateTime", typeof(System.DateTime));
    
            var lastModifiedDateTimeParameter = lastModifiedDateTime.HasValue ?
                new ObjectParameter("lastModifiedDateTime", lastModifiedDateTime) :
                new ObjectParameter("lastModifiedDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddReturn", returnIDParameter, orderIDParameter, channelOfReturnParameter, returnAmountParameter, returnDateTimeParameter, lastModifiedDateTimeParameter);
        }
    
        public virtual int AddReturnDetails(Nullable<System.Guid> returnDetailID, Nullable<System.Guid> returnID, Nullable<System.Guid> productID, Nullable<int> quantity, string reasonOfReturn, Nullable<int> unitPrice, Nullable<decimal> totalPrice, Nullable<System.Guid> addressID)
        {
            var returnDetailIDParameter = returnDetailID.HasValue ?
                new ObjectParameter("returnDetailID", returnDetailID) :
                new ObjectParameter("returnDetailID", typeof(System.Guid));
    
            var returnIDParameter = returnID.HasValue ?
                new ObjectParameter("returnID", returnID) :
                new ObjectParameter("returnID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(System.Guid));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var reasonOfReturnParameter = reasonOfReturn != null ?
                new ObjectParameter("reasonOfReturn", reasonOfReturn) :
                new ObjectParameter("reasonOfReturn", typeof(string));
    
            var unitPriceParameter = unitPrice.HasValue ?
                new ObjectParameter("unitPrice", unitPrice) :
                new ObjectParameter("unitPrice", typeof(int));
    
            var totalPriceParameter = totalPrice.HasValue ?
                new ObjectParameter("totalPrice", totalPrice) :
                new ObjectParameter("totalPrice", typeof(decimal));
    
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("addressID", addressID) :
                new ObjectParameter("addressID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddReturnDetails", returnDetailIDParameter, returnIDParameter, productIDParameter, quantityParameter, reasonOfReturnParameter, unitPriceParameter, totalPriceParameter, addressIDParameter);
        }
    
        public virtual int AddSalesPerson(Nullable<System.Guid> salespersonid, string salespersonname, string mobile, string email, string password, Nullable<decimal> salary, Nullable<decimal> bonus, Nullable<decimal> target, Nullable<System.DateTime> joiningdate, string addressl1, string addressl2, string city, string state, string pincode, Nullable<System.DateTime> birthdate, Nullable<System.DateTime> lastAccountModifiedDateTime)
        {
            var salespersonidParameter = salespersonid.HasValue ?
                new ObjectParameter("salespersonid", salespersonid) :
                new ObjectParameter("salespersonid", typeof(System.Guid));
    
            var salespersonnameParameter = salespersonname != null ?
                new ObjectParameter("salespersonname", salespersonname) :
                new ObjectParameter("salespersonname", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("salary", salary) :
                new ObjectParameter("salary", typeof(decimal));
    
            var bonusParameter = bonus.HasValue ?
                new ObjectParameter("bonus", bonus) :
                new ObjectParameter("bonus", typeof(decimal));
    
            var targetParameter = target.HasValue ?
                new ObjectParameter("target", target) :
                new ObjectParameter("target", typeof(decimal));
    
            var joiningdateParameter = joiningdate.HasValue ?
                new ObjectParameter("joiningdate", joiningdate) :
                new ObjectParameter("joiningdate", typeof(System.DateTime));
    
            var addressl1Parameter = addressl1 != null ?
                new ObjectParameter("addressl1", addressl1) :
                new ObjectParameter("addressl1", typeof(string));
    
            var addressl2Parameter = addressl2 != null ?
                new ObjectParameter("addressl2", addressl2) :
                new ObjectParameter("addressl2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("city", city) :
                new ObjectParameter("city", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var pincodeParameter = pincode != null ?
                new ObjectParameter("pincode", pincode) :
                new ObjectParameter("pincode", typeof(string));
    
            var birthdateParameter = birthdate.HasValue ?
                new ObjectParameter("birthdate", birthdate) :
                new ObjectParameter("birthdate", typeof(System.DateTime));
    
            var lastAccountModifiedDateTimeParameter = lastAccountModifiedDateTime.HasValue ?
                new ObjectParameter("lastAccountModifiedDateTime", lastAccountModifiedDateTime) :
                new ObjectParameter("lastAccountModifiedDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSalesPerson", salespersonidParameter, salespersonnameParameter, mobileParameter, emailParameter, passwordParameter, salaryParameter, bonusParameter, targetParameter, joiningdateParameter, addressl1Parameter, addressl2Parameter, cityParameter, stateParameter, pincodeParameter, birthdateParameter, lastAccountModifiedDateTimeParameter);
        }
    
        public virtual int DeleteAddress(string addressID)
        {
            var addressIDParameter = addressID != null ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAddress", addressIDParameter);
        }
    
        public virtual int DeleteOrderDetails(Nullable<System.Guid> orderID, Nullable<System.Guid> productID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrderDetails", orderIDParameter, productIDParameter);
        }
    
        public virtual int DeleteProduct(Nullable<System.Guid> prodid)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProduct", prodidParameter);
        }
    
        public virtual int DeleteRetailer(Nullable<System.Guid> retailerID)
        {
            var retailerIDParameter = retailerID.HasValue ?
                new ObjectParameter("retailerID", retailerID) :
                new ObjectParameter("retailerID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRetailer", retailerIDParameter);
        }
    
        public virtual int DeleteReturn(Nullable<System.Guid> returnID)
        {
            var returnIDParameter = returnID.HasValue ?
                new ObjectParameter("returnID", returnID) :
                new ObjectParameter("returnID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReturn", returnIDParameter);
        }
    
        public virtual int DeleteReturnDetails(Nullable<System.Guid> returnID, Nullable<System.Guid> productID)
        {
            var returnIDParameter = returnID.HasValue ?
                new ObjectParameter("returnID", returnID) :
                new ObjectParameter("returnID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteReturnDetails", returnIDParameter, productIDParameter);
        }
    
        public virtual int DeleteSalesPerson(Nullable<System.Guid> salespersonid)
        {
            var salespersonidParameter = salespersonid.HasValue ?
                new ObjectParameter("salespersonid", salespersonid) :
                new ObjectParameter("salespersonid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSalesPerson", salespersonidParameter);
        }
    
        public virtual ObjectResult<GetAllAddresses_Result> GetAllAddresses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAddresses_Result>("GetAllAddresses");
        }
    
        public virtual ObjectResult<GetAllProducts_Result> GetAllProducts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProducts_Result>("GetAllProducts");
        }
    
        public virtual ObjectResult<GetAllRetailers_Result> GetAllRetailers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllRetailers_Result>("GetAllRetailers");
        }
    
        public virtual ObjectResult<GetAllReturnDetails_Result> GetAllReturnDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllReturnDetails_Result>("GetAllReturnDetails");
        }
    
        public virtual ObjectResult<GetAllReturns_Result> GetAllReturns()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllReturns_Result>("GetAllReturns");
        }
    
        public virtual ObjectResult<GetAllSalesPersons_Result> GetAllSalesPersons()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSalesPersons_Result>("GetAllSalesPersons");
        }
    
        public virtual ObjectResult<GetOrderDetailsByOrderID_Result> GetOrderDetailsByOrderID(Nullable<System.Guid> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderDetailsByOrderID_Result>("GetOrderDetailsByOrderID", orderIDParameter);
        }
    
        public virtual ObjectResult<GetOrderDetailsByProductID_Result> GetOrderDetailsByProductID(Nullable<System.Guid> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderDetailsByProductID_Result>("GetOrderDetailsByProductID", productIDParameter);
        }
    
        public virtual ObjectResult<GetOrderOnlineSold_Result> GetOrderOnlineSold()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrderOnlineSold_Result>("GetOrderOnlineSold");
        }
    
        public virtual ObjectResult<GetOrdersByOrderID_Result> GetOrdersByOrderID(Nullable<System.Guid> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrdersByOrderID_Result>("GetOrdersByOrderID", orderIDParameter);
        }
    
        public virtual ObjectResult<GetOrdersbyRetailerID_Result> GetOrdersbyRetailerID(Nullable<System.Guid> retailerID)
        {
            var retailerIDParameter = retailerID.HasValue ?
                new ObjectParameter("retailerID", retailerID) :
                new ObjectParameter("retailerID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrdersbyRetailerID_Result>("GetOrdersbyRetailerID", retailerIDParameter);
        }
    
        public virtual ObjectResult<GetOrdersBySalespersonID_Result> GetOrdersBySalespersonID(Nullable<System.Guid> salespersonID)
        {
            var salespersonIDParameter = salespersonID.HasValue ?
                new ObjectParameter("salespersonID", salespersonID) :
                new ObjectParameter("salespersonID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrdersBySalespersonID_Result>("GetOrdersBySalespersonID", salespersonIDParameter);
        }
    
        public virtual ObjectResult<GetProductByProductID_Result> GetProductByProductID(Nullable<System.Guid> prodid)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductByProductID_Result>("GetProductByProductID", prodidParameter);
        }
    
        public virtual ObjectResult<GetProductsByCategory_Result> GetProductsByCategory(string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductsByCategory_Result>("GetProductsByCategory", categoryParameter);
        }
    
        public virtual ObjectResult<GetProductsByName_Result> GetProductsByName(string prodname)
        {
            var prodnameParameter = prodname != null ?
                new ObjectParameter("prodname", prodname) :
                new ObjectParameter("prodname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProductsByName_Result>("GetProductsByName", prodnameParameter);
        }
    
        public virtual ObjectResult<GetRetailerByEmail_Result> GetRetailerByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRetailerByEmail_Result>("GetRetailerByEmail", emailParameter);
        }
    
        public virtual ObjectResult<GetRetailerByEmailAndPassword_Result> GetRetailerByEmailAndPassword(string email, string retailerPassword)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var retailerPasswordParameter = retailerPassword != null ?
                new ObjectParameter("retailerPassword", retailerPassword) :
                new ObjectParameter("retailerPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRetailerByEmailAndPassword_Result>("GetRetailerByEmailAndPassword", emailParameter, retailerPasswordParameter);
        }
    
        public virtual ObjectResult<GetRetailerByName_Result> GetRetailerByName(string retailerName)
        {
            var retailerNameParameter = retailerName != null ?
                new ObjectParameter("retailerName", retailerName) :
                new ObjectParameter("retailerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRetailerByName_Result>("GetRetailerByName", retailerNameParameter);
        }
    
        public virtual ObjectResult<GetRetailerByRetailerID_Result> GetRetailerByRetailerID(Nullable<System.Guid> retailerID)
        {
            var retailerIDParameter = retailerID.HasValue ?
                new ObjectParameter("retailerID", retailerID) :
                new ObjectParameter("retailerID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRetailerByRetailerID_Result>("GetRetailerByRetailerID", retailerIDParameter);
        }
    
        public virtual ObjectResult<GetReturnByOrderID_Result> GetReturnByOrderID(Nullable<System.Guid> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReturnByOrderID_Result>("GetReturnByOrderID", orderIDParameter);
        }
    
        public virtual ObjectResult<GetReturnByReturnID_Result> GetReturnByReturnID(string returnID)
        {
            var returnIDParameter = returnID != null ?
                new ObjectParameter("returnID", returnID) :
                new ObjectParameter("returnID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReturnByReturnID_Result>("GetReturnByReturnID", returnIDParameter);
        }
    
        public virtual ObjectResult<GetReturnDetailsByProductID_Result> GetReturnDetailsByProductID(Nullable<System.Guid> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReturnDetailsByProductID_Result>("GetReturnDetailsByProductID", productIDParameter);
        }
    
        public virtual ObjectResult<GetReturnDetailsByReturnID_Result> GetReturnDetailsByReturnID(Nullable<System.Guid> returnID)
        {
            var returnIDParameter = returnID.HasValue ?
                new ObjectParameter("returnID", returnID) :
                new ObjectParameter("returnID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetReturnDetailsByReturnID_Result>("GetReturnDetailsByReturnID", returnIDParameter);
        }
    
        public virtual ObjectResult<GetSalesPersonByEmail_Result> GetSalesPersonByEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesPersonByEmail_Result>("GetSalesPersonByEmail", emailParameter);
        }
    
        public virtual ObjectResult<GetSalesPersonByEmailAndPassword_Result> GetSalesPersonByEmailAndPassword(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesPersonByEmailAndPassword_Result>("GetSalesPersonByEmailAndPassword", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<GetSalesPersonBySalesPersonID_Result> GetSalesPersonBySalesPersonID(Nullable<System.Guid> salespersonid)
        {
            var salespersonidParameter = salespersonid.HasValue ?
                new ObjectParameter("salespersonid", salespersonid) :
                new ObjectParameter("salespersonid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesPersonBySalesPersonID_Result>("GetSalesPersonBySalesPersonID", salespersonidParameter);
        }
    
        public virtual ObjectResult<GetSalesPersonsByName_Result> GetSalesPersonsByName(string salespersonname)
        {
            var salespersonnameParameter = salespersonname != null ?
                new ObjectParameter("salespersonname", salespersonname) :
                new ObjectParameter("salespersonname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesPersonsByName_Result>("GetSalesPersonsByName", salespersonnameParameter);
        }
    
        public virtual int UpdateAddress(string addressID, string retailerID, string line1, string line2, string city, Nullable<int> pincode, string state, string mobileNo, Nullable<System.DateTime> creationDateTime, Nullable<System.DateTime> lastModifiedDateTime)
        {
            var addressIDParameter = addressID != null ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(string));
    
            var retailerIDParameter = retailerID != null ?
                new ObjectParameter("RetailerID", retailerID) :
                new ObjectParameter("RetailerID", typeof(string));
    
            var line1Parameter = line1 != null ?
                new ObjectParameter("Line1", line1) :
                new ObjectParameter("Line1", typeof(string));
    
            var line2Parameter = line2 != null ?
                new ObjectParameter("Line2", line2) :
                new ObjectParameter("Line2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var pincodeParameter = pincode.HasValue ?
                new ObjectParameter("Pincode", pincode) :
                new ObjectParameter("Pincode", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var creationDateTimeParameter = creationDateTime.HasValue ?
                new ObjectParameter("CreationDateTime", creationDateTime) :
                new ObjectParameter("CreationDateTime", typeof(System.DateTime));
    
            var lastModifiedDateTimeParameter = lastModifiedDateTime.HasValue ?
                new ObjectParameter("LastModifiedDateTime", lastModifiedDateTime) :
                new ObjectParameter("LastModifiedDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAddress", addressIDParameter, retailerIDParameter, line1Parameter, line2Parameter, cityParameter, pincodeParameter, stateParameter, mobileNoParameter, creationDateTimeParameter, lastModifiedDateTimeParameter);
        }
    
        public virtual int UpdateOrderDetailStatus(Nullable<System.Guid> orderID, Nullable<System.Guid> productID, string currentStatus)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("orderID", orderID) :
                new ObjectParameter("orderID", typeof(System.Guid));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("productID", productID) :
                new ObjectParameter("productID", typeof(System.Guid));
    
            var currentStatusParameter = currentStatus != null ?
                new ObjectParameter("currentStatus", currentStatus) :
                new ObjectParameter("currentStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderDetailStatus", orderIDParameter, productIDParameter, currentStatusParameter);
        }
    
        public virtual int UpdatePassword(Nullable<System.Guid> retailerID, string retailerPassword)
        {
            var retailerIDParameter = retailerID.HasValue ?
                new ObjectParameter("retailerID", retailerID) :
                new ObjectParameter("retailerID", typeof(System.Guid));
    
            var retailerPasswordParameter = retailerPassword != null ?
                new ObjectParameter("retailerPassword", retailerPassword) :
                new ObjectParameter("retailerPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePassword", retailerIDParameter, retailerPasswordParameter);
        }
    
        public virtual int UpdateProductDetails(Nullable<System.Guid> prodid, string prodname, string category, string size, string colour, string techspecs)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(System.Guid));
    
            var prodnameParameter = prodname != null ?
                new ObjectParameter("prodname", prodname) :
                new ObjectParameter("prodname", typeof(string));
    
            var categoryParameter = category != null ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("size", size) :
                new ObjectParameter("size", typeof(string));
    
            var colourParameter = colour != null ?
                new ObjectParameter("colour", colour) :
                new ObjectParameter("colour", typeof(string));
    
            var techspecsParameter = techspecs != null ?
                new ObjectParameter("techspecs", techspecs) :
                new ObjectParameter("techspecs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProductDetails", prodidParameter, prodnameParameter, categoryParameter, sizeParameter, colourParameter, techspecsParameter);
        }
    
        public virtual int UpdateProductStock(Nullable<System.Guid> prodid, Nullable<int> stock)
        {
            var prodidParameter = prodid.HasValue ?
                new ObjectParameter("prodid", prodid) :
                new ObjectParameter("prodid", typeof(System.Guid));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("stock", stock) :
                new ObjectParameter("stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProductStock", prodidParameter, stockParameter);
        }
    
        public virtual int UpdateRetailer(Nullable<System.Guid> retailerID, string retailerName, string retailerMobile, string email, Nullable<System.DateTime> modifiedDateTime)
        {
            var retailerIDParameter = retailerID.HasValue ?
                new ObjectParameter("retailerID", retailerID) :
                new ObjectParameter("retailerID", typeof(System.Guid));
    
            var retailerNameParameter = retailerName != null ?
                new ObjectParameter("retailerName", retailerName) :
                new ObjectParameter("retailerName", typeof(string));
    
            var retailerMobileParameter = retailerMobile != null ?
                new ObjectParameter("retailerMobile", retailerMobile) :
                new ObjectParameter("retailerMobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var modifiedDateTimeParameter = modifiedDateTime.HasValue ?
                new ObjectParameter("modifiedDateTime", modifiedDateTime) :
                new ObjectParameter("modifiedDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRetailer", retailerIDParameter, retailerNameParameter, retailerMobileParameter, emailParameter, modifiedDateTimeParameter);
        }
    
        public virtual int UpdateSalesPerson(Nullable<System.Guid> salespersonid, string name, string mobile, string email)
        {
            var salespersonidParameter = salespersonid.HasValue ?
                new ObjectParameter("salespersonid", salespersonid) :
                new ObjectParameter("salespersonid", typeof(System.Guid));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var mobileParameter = mobile != null ?
                new ObjectParameter("mobile", mobile) :
                new ObjectParameter("mobile", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSalesPerson", salespersonidParameter, nameParameter, mobileParameter, emailParameter);
        }
    
        public virtual int UpdateSalesPersonPassword(Nullable<System.Guid> salespersonid, string password)
        {
            var salespersonidParameter = salespersonid.HasValue ?
                new ObjectParameter("salespersonid", salespersonid) :
                new ObjectParameter("salespersonid", typeof(System.Guid));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSalesPersonPassword", salespersonidParameter, passwordParameter);
        }
    }
}
