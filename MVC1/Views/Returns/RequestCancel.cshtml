@*View to perform Cancellation of a particular product
    Project name : Great Outdoors
    Developer name: Sourav Maji
    Use case : Return
    Creation date : 30/10/2019
    Last modified : 08/11/2019*@

@using System.Web.Optimization
@model GreatOutdoors.Mvc.Models.OrderDetailViewModel
@Scripts.Render("~/scripts/jqueryvalidation")
@{
    ViewBag.Title = "Request Cancel";
    Layout = "~/Views/Shared/GreatOutdoorsLayout.cshtml";
}

<div class="container-fluid">
    <h2 class="col-md-4">Cancel your Order</h2>
    <br /><br />
    @using (Html.BeginForm("RequestCancel", "Returns", FormMethod.Post))
    {
        @Html.HiddenFor(temp => temp.OrderDetailID)
        <div class="row">
            <div class="col-md-6 mx-auto border-secondary">
                <h5 class="col-md-4 mx-auto">Product Details</h5>
                <br />
                <div class="form-group form-row">
                    @Html.LabelFor(temp => temp.ProductName, "Product Name", new { @class = "col-form-label col-lg-3" })
                    @Html.TextBoxFor(temp => temp.ProductName, new { @class = "form-control label col-lg-6", @readonly = "readonly" })
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(temp => temp.Quantity, "Quantity", new { @class = "col-form-label col-lg-3" })
                    @Html.TextBoxFor(temp => temp.Quantity, new { @class = "form-control label col-lg-6", @readonly = "readonly" })
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(temp => temp.TotalPrice, "Total Price", new { @class = "col-form-label col-lg-3" })
                    @Html.TextBoxFor(temp => temp.TotalPrice, new { @class = "form-control label col-lg-6", @readonly = "readonly" })
                </div>

                <br />
                <h5 class="col-md-4 mx-auto">Delivery Address</h5>
                <br />
                <div class="form-group form-row">
                    @Html.LabelFor(temp => temp.City, "City", new { @class = "col-form-label col-lg-3" })
                    @Html.TextBoxFor(temp => temp.City, new { @class = "form-control label col-lg-6", @readonly = "readonly" })
                </div>

                <div class="form-group form-row">
                    @Html.LabelFor(temp => temp.State, "State", new { @class = "col-form-label col-lg-3" })
                    @Html.TextBoxFor(temp => temp.State, new { @class = "form-control label col-lg-6", @readonly = "readonly" })
                </div>
                <div class="form-group form-row">
                    @Html.LabelFor(temp => temp.PinCode, "Pin Code", new { @class = "col-form-label col-lg-3" })
                    @Html.TextBoxFor(temp => temp.PinCode, new { @class = "form-control label col-lg-6", @readonly = "readonly" })
                </div>
                <div class="form-group form-row">
                    @Html.LabelFor(temp => temp.MobileNo, "Mobile No.", new { @class = "col-form-label col-lg-3" })
                    @Html.TextBoxFor(temp => temp.MobileNo, new { @class = "form-control label col-lg-6", @readonly = "readonly" })
                </div>
                <br>
                <div class="border-top text-right pt-2">
                    <button class="btn btn-success" formaction="@Url.Action("RequestCancel", "Returns")" onclick="return confirm('Are you Sure you want to cancel the Product?')">Cancel</button>
                </div>

            </div>
        </div>
    }
</div>


@if (ViewBag.Message != null)
{
    <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            };
    </script>
}